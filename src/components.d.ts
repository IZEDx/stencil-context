/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface CtxConsumer {
    'mapper': (val: any) => string;
    'name': string;
  }
  interface CtxProvider {
    'name': string;
    'value': any;
  }
  interface GreetComp {}
  interface MyComponent {}
}

declare global {


  interface HTMLCtxConsumerElement extends Components.CtxConsumer, HTMLStencilElement {}
  var HTMLCtxConsumerElement: {
    prototype: HTMLCtxConsumerElement;
    new (): HTMLCtxConsumerElement;
  };

  interface HTMLCtxProviderElement extends Components.CtxProvider, HTMLStencilElement {}
  var HTMLCtxProviderElement: {
    prototype: HTMLCtxProviderElement;
    new (): HTMLCtxProviderElement;
  };

  interface HTMLGreetCompElement extends Components.GreetComp, HTMLStencilElement {}
  var HTMLGreetCompElement: {
    prototype: HTMLGreetCompElement;
    new (): HTMLGreetCompElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'ctx-consumer': HTMLCtxConsumerElement;
    'ctx-provider': HTMLCtxProviderElement;
    'greet-comp': HTMLGreetCompElement;
    'my-component': HTMLMyComponentElement;
  }
}

declare namespace LocalJSX {
  interface CtxConsumer {
    'mapper'?: (val: any) => string;
    'name'?: string;
  }
  interface CtxProvider {
    'name'?: string;
    'value'?: any;
  }
  interface GreetComp {}
  interface MyComponent {}

  interface IntrinsicElements {
    'ctx-consumer': CtxConsumer;
    'ctx-provider': CtxProvider;
    'greet-comp': GreetComp;
    'my-component': MyComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'ctx-consumer': LocalJSX.CtxConsumer & JSXBase.HTMLAttributes<HTMLCtxConsumerElement>;
      'ctx-provider': LocalJSX.CtxProvider & JSXBase.HTMLAttributes<HTMLCtxProviderElement>;
      'greet-comp': LocalJSX.GreetComp & JSXBase.HTMLAttributes<HTMLGreetCompElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}


